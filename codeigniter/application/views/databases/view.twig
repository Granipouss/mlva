{% extends "layout/base.twig" %}

{% block title %}View {{ base.name }}{% endblock %}
{% set menu = "databases" %}

{% block content %}
<div class="row">
	<div class="col-sm-12">

		{% include "databases/inc/header.twig" %}
		{% if base.description %}
			<div class="col-xs-12 col-sm-6">
				<h4>Description:</h4>
				<p>{{ auto_link_publication(base.description) }}</p>
			</div>
		{% endif %}
		{% if base.website %}
			<div class="col-xs-12 col-sm-6">
				<h4>Support Website:</h4>
				<p>{{ safe_auto_link(base.website) }}</p>
			</div>
		{% endif %}

		<div class="col-xs-12">
			<p>
				Columns (click to hide) :
				<span id="base_url" data-url="{{base_url()}}"></span>
				{% set addClass = "" %}
				{% if isMasked("colkey") %}{% set addClass = "text-muted"%}{% endif %}
				<a role="button" class="maskLink {{addClass}}" data-col="colkey">Key</a>
				{% for data in base.metadata %}
					{% set colName = data|replace({' ': '_'})|replace({'.': '_'}) %}
					{% set addClass = "" %}
					{% if isMasked("col-" ~ colName) %}{% set addClass = "text-muted"%}{% endif %}
					- <a role="button" class="maskLink {{addClass}}" data-col="col-{{colName}}">{{ data }}</a>
				{% endfor %}
				{% if showGN %}
					{% set addClass = "" %}
					{% if isMasked("colgenonum") %}{% set addClass = "text-muted"%}{% endif %}
					- <a role="button" class="maskLink {{addClass}}" data-col="colgenonum">Genotype Number</a>
				{% endif %}
			</p>
		</div>
	</div>
</div>
</div>

<div class="database">
	<table id="strain-list" class="tablesorter table table-condensed table-striped">
		<thead><tr>
			<th class="colkey">Key</th>
			{% for data in base.metadata %}
				<th class="col-{{ data|replace({' ': '_'})|replace({'.': '_'}) }}">{{ data }}</th>
			{% endfor %}
			{% if showGN %}
				<th class="colgenonum">Genotype Number - {{ filter.name }}</th>
			{% endif %}
			{% for data in filter.data %}
				<th class="marker">{{ data }}</th>
			{% endfor %}
		</tr></thead>
		<tbody>
			{% for strain in pageContent %}
				<tr>
					<td class="colkey">{{ strain.name }}</td>
					{% for data in base.metadata %}
						<td class="col-{{ data|replace({' ': '_'})|replace({'.': '_'}) }}">{{ (strain.metadata[data]) }}</td>
					{% endfor %}
					{% if showGN %}
						<td class="colgenonum">{{ strain.genonum }}</td>
					{% endif %}
					{% for data in filter.data %}
						<td class="marker">{% if strain.data[data] >= 0 %}{{ strain.data[data] }}{% endif %}</td>
					{% endfor %}
				</tr>
			{% endfor %}
		</tbody>
	</table>
</div>

<div class="container">
	<div class="col-xs-12">
		<nav>
			<ul class="pager btn-lg">
				{{pagination | raw}}
			</ul>
		</nav>
	</div>
{% endblock %}

{% block footer_js %}
{{ parent () }}
{# <script src="{{ base_url('dist/js/jquery.tablesorter.min.js') }}"></script>
<script src="{{ base_url('dist/js/jquery.autolink.js') }}"></script> #}
<script>
	// Lighten / Darken Color
	// http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color
	function LightenDarkenColor(color, percent) {
	    var num = parseInt(color,16),
	    	amt = Math.round(2.55 * percent),
	    	R 	= (num >> 16) + amt,
	    	B 	= (num >> 8 & 0x00FF) + amt,
	    	G 	= (num & 0x0000FF) + amt;
	    return (0x1000000 + (R<255?R<1?0:R:255)*0x10000 + (B<255?B<1?0:B:255)*0x100 + (G<255?G<1?0:G:255)).toString(16).slice(1);
	}

	$(document).ready(function() {

		// Table sorter
		// $("#strain-list").tablesorter({
		//	theme: 'blue',
		//	headerTemplate: '{content} <small>{icon}</small>',
		// 	headers : {
		// 		'.marker'   : { sorter: false }
		// 	}
		// });

		var base_url = $("#base_url").data('url');
		//Remember toggled columns
		$('.maskLink').each(function() {
			if($(this).hasClass("text-muted")) {
				var column = $(this).data('col');
				$('.'+column).toggle();
			}
		});
		
		// Toggle columns
		$('.maskLink').on('click', function() {
			var column = $(this).data('col');
			$.get(base_url+"/ajax/mask", { col: column } );
			$('.'+column).toggle();
			$(this).toggleClass("text-muted");
		});

		// Color markers
		// var sum = 0, n = 0;
		// $('td.marker').each(function() { if($(this).text() != '') {
		// 	sum += parseInt( $(this).text() );
		// 	n += 1;
		// } });
		// var max = 2 * sum / n;
		var max = 10;
		
		$('.database td').each(function() { if($(this).text() != '') {
			if($(this).is(".marker")) {
				var x = Math.min(parseInt( $(this).text() ), max) / max;
				var r = parseInt(x * 240 + (1-x) *  30);
				var g = parseInt(x *  30 + (1-x) * 240);
				var b = parseInt(x *   0 + (1-x) *   0);
				var hex = ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
				$(this).css('color', "#" + hex);
				$(this).css('background', "#" + LightenDarkenColor(hex, 50));
				$(this).css('font-weight', "bold");
			} else {				
				var str = $(this).text().replace(/&/g, "&amp;").replace(/</g, "&lt;")
										.replace(/>/g, "&gt;").replace(/"/g, "&quot;")
										.replace(/'/g, "&#039;");
				// Find and replace url
				//var regexp = /([\w,\sÀ-ÿ\-]+)(\(((\w*:\/\/|www\.)[^\s()<>;]+\w)\))/g;
				var regexp = /(.+)\ \(((https?:\/\/)([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?)\)/g;
				str = str.replace(regexp, '<a href="$2">$1</a>');
				// Find and replace email
				var regexp = /(([a-z0-9_\.-]+)\@([\da-z\.-]+)\.([a-z\.]{2,6}))/g;
				str = str.replace(regexp, '<a href="mailto:$1">$1</a>');
				$(this).html(str);
			}
		} });
  });
</script>
{% endblock %}
